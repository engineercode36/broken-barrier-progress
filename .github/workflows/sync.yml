name: Sync Changes to All Repositories

on:
  push:
    branches:
      - main  # Replace 'main' with your default branch

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the Source Repository
      - name: Checkout Main Repository
        uses: actions/checkout@v3
        with:
          repository: engineercode36/broken-barrier-progress  # The main repo containing this workflow

      # Step 2: Set Up Git User for Pushing Changes
      - name: Set Up Git
        run: |
          git config user.name "GitHub Action Bot"  # Set the username for git actions
          git config user.email "actions@github.com"  # Set the email for git actions

      # Step 3: Sync Changes with Other Repositories
      - name: Sync with Other Repositories
        run: |
          # List of repositories to sync (update this list with the new repo)
          REPOS=(
            "https://github.com/engineercode36/note-haven-syntax-21.git"
            "https://github.com/braman7/opti-progress-hub.git"
            "https://github.com/engineercode36/opti-progress-hub"
          )
          # GitHub Token for authentication
          TOKEN="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"  # Replace with a valid GitHub token
          # Configure credentials for pushing
          git config --global credential.helper store
          echo "https://${TOKEN}:@github.com" > ~/.git-credentials
          
          # Verify if .git folder exists
          if [ ! -d ".git" ]; then
            echo "Repository not initialized as git. Exiting."
            exit 1
          fi

          # Loop through repositories and push changes
          for repo in "${REPOS[@]}"; do
            echo "Syncing with $repo"
            # Add remote target if it doesn't already exist
            if ! git remote | grep -q "target"; then
              git remote add target "$repo"
            fi
            # Push all branches and tags to the target repo
            if git push --mirror target; then
              echo "Successfully pushed to $repo"
            else
              echo "Failed to push to $repo"
            fi
            # Remove the remote target after sync
            git remote remove target
          done

          # Clean up credentials after use
          rm -f ~/.git-credentials
